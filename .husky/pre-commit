#!/bin/bash
. "$(dirname -- "$0")/_/husky.sh"

checkPrettier () {
    npm run prettierCheck "$1" 

}

checkLinter(){
    npm run lint
    if [ $? -eq 0 ]; then
        echo "\t\033[32mLint Passed: $1\033[0m"
    else
        echo "\t\033[41mLint Failed: $1\033[0m"
        echo "Code style issues found in the above file(s). Forgot to run lint?"  
        exit 1;
    fi
}

BACKEND_STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM ./backend/ | sed 's/backend\///1')
CLI_STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM ./cli/ | sed 's/cli\///1')
CONTRACTS_STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM ./contracts/ | sed 's/contracts\///1')
SDK_STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM ./sdk/ | sed 's/sdk\///1')
WEB_STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM ./web/ | sed 's/web\///1')

if ( [ "$BACKEND_STAGED_FILES" = "" ] && 
    [ "$CLI_STAGED_FILES" = "" ] && 
    [ "$CONTRACTS_STAGED_FILES" = "" ] && 
    [ "$SDK_STAGED_FILES" = "" ] && 
    [ "$WEB_STAGED_FILES" = "" ] ); then
  exit 0
fi

echo "\nValidating Prettier & Linting:\n"

if ( [ "$BACKEND_STAGED_FILES" != "" ] ); then
  cd backend
#   checkPrettier $BACKEND_STAGED_FILES 
  checkLinter
  cd ..
fi

if ( [ "$CLI_STAGED_FILES" != "" ] ); then
  cd cli
  checkPrettier $CLI_STAGED_FILES 
  checkLinter
  cd ..
fi

if ( [ "$CONTRACTS_STAGED_FILES" != "" ] ); then
    cd contracts
    echo "$CONTRACTS_STAGED_FILES"
    checkPrettier $CONTRACTS_STAGED_FILES
    checkLinter
    cd ..
fi

if ( [ "$SDK_STAGED_FILES" != "" ] ); then
    cd sdk
    checkPrettier $SDK_STAGED_FILES
    checkLinter
    cd ..
fi

if ( [ "$WEB_STAGED_FILES" != "" ] ); then
    cd web
    checkPrettier $WEB_STAGED_FILES
    checkLinter
    cd ..
fi

exit $?

# #! Uncomment for Testing
# exit 1
