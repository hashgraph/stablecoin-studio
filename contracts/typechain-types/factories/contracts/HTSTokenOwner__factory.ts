/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HTSTokenOwner,
  HTSTokenOwnerInterface,
} from "../../contracts/HTSTokenOwner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenExpiryInfo",
    outputs: [
      {
        internalType: "int256",
        name: "responseCode",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "second",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "autoRenewAccount",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "autoRenewPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct IHederaTokenService.Expiry",
        name: "expiryInfo",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "keyType",
        type: "uint256",
      },
    ],
    name: "getTokenKey",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "inheritAccountKey",
            type: "bool",
          },
          {
            internalType: "address",
            name: "contractId",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "ed25519",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "ECDSA_secp256k1",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "delegatableContractId",
            type: "address",
          },
        ],
        internalType: "struct IHederaTokenService.KeyValue",
        name: "key",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantTokenKyc",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isKyc",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
      {
        internalType: "bool",
        name: "kycGranted",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "pauseToken",
    outputs: [
      {
        internalType: "int256",
        name: "responseCode",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeTokenKyc",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20address",
        type: "address",
      },
    ],
    name: "setERC20Address",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tranferContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "unpauseToken",
    outputs: [
      {
        internalType: "int256",
        name: "responseCode",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "second",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "autoRenewAccount",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "autoRenewPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct IHederaTokenService.Expiry",
        name: "expiryInfo",
        type: "tuple",
      },
    ],
    name: "updateTokenExpiryInfo",
    outputs: [
      {
        internalType: "int256",
        name: "responseCode",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "keyType",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "inheritAccountKey",
                type: "bool",
              },
              {
                internalType: "address",
                name: "contractId",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "ed25519",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "ECDSA_secp256k1",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "delegatableContractId",
                type: "address",
              },
            ],
            internalType: "struct IHederaTokenService.KeyValue",
            name: "key",
            type: "tuple",
          },
        ],
        internalType: "struct IHederaTokenService.TokenKey[]",
        name: "keys",
        type: "tuple[]",
      },
    ],
    name: "updateTokenKeys",
    outputs: [
      {
        internalType: "int64",
        name: "responseCode",
        type: "int64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "wipeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611983806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c80638f8d7f99116100875780638f8d7f99146101d0578063af99c633146101e3578063d1df306c146101f6578063d4e2b89614610209578063d614cdb81461021c578063e192545a1461023d578063f18d03cc14610250578063f2c31ff41461026357600080fd5b80633b3bff0f146100e55780633c4dd32e1461010b57806341bec0d21461012c578063593d6e82146101415780636a83b7e9146101545780636fc3cbaf1461017457806379c650681461019a5780637c41ad2c146101bd575b600080fd5b6100f86100f3366004610e3b565b610290565b6040519081526020015b60405180910390f35b61011e610119366004610e58565b61036a565b604051610102929190610f4a565b61013f61013a366004610e3b565b610451565b005b6100f861014f36600461102a565b6104d1565b600054610167906001600160a01b031681565b60405161010291906110a7565b610187610182366004611169565b6105ae565b60405160079190910b8152602001610102565b6101ad6101a8366004610e58565b6105da565b6040519015158152602001610102565b6100f86101cb366004610e3b565b610653565b6101876101de366004611305565b61067d565b6101876101f1366004611305565b6106a9565b6101ad610204366004610e58565b6106d5565b6101ad61021736600461133e565b610729565b61022f61022a366004610e3b565b610777565b6040516101029291906113b4565b6101ad61024b3660046113c8565b610896565b6101ad61025e366004611409565b6108cf565b610276610271366004611305565b61091d565b6040805160079390930b8352901515602083015201610102565b60008060006101676001600160a01b0316633b3bff0f60e01b856040516024016102ba91906110a7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516102f8919061145a565b6000604051808303816000865af19150503d8060008114610335576040519150601f19603f3d011682016040523d82523d6000602084013e61033a565b606091505b50915091508161034b57601561035f565b8080602001905181019061035f9190611488565b60030b949350505050565b6000610374610dd0565b604080516001600160a01b0386166024820152604480820186905282518083039091018152606490910182526020810180516001600160e01b0316631e26e99760e11b17905290516000918291610167916103ce9161145a565b6000604051808303816000865af19150503d806000811461040b576040519150601f19603f3d011682016040523d82523d6000602084013e610410565b606091505b509150915061041d610dd0565b8261042a5760158161043e565b8180602001905181019061043e91906114f3565b60039190910b9890975095505050505050565b6000546001600160a01b0316156104af5760405162461bcd60e51b815260206004820152601d60248201527f4552433230206164647265737320616c726561647920646566696e656400000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060006101676001600160a01b031663593d6e8260e01b86866040516024016104fd9291906115cd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161053b919061145a565b6000604051808303816000865af19150503d8060008114610578576040519150601f19603f3d011682016040523d82523d6000602084013e61057d565b606091505b50915091508161058e5760156105a2565b808060200190518101906105a29190611488565b60030b95945050505050565b60008060006101676001600160a01b0316636fc3cbaf60e01b86866040516024016104fd9291906115ea565b600080546001600160a01b031633146106055760405162461bcd60e51b81526004016104a69061166f565b6040805160008082526020820190925261063e908590859084610638565b60608152602001906001900390816106235790505b506109f1565b5050905061064b81610aef565b949350505050565b60008060006101676001600160a01b0316637c41ad2c60e01b856040516024016102ba91906110a7565b60008060006101676001600160a01b0316638f8d7f9960e01b86866040516024016104fd9291906116b1565b60008060006101676001600160a01b031663af99c63360e01b86866040516024016104fd9291906116b1565b600080546001600160a01b031633146107005760405162461bcd60e51b81526004016104a69061166f565b6040805160008082526020820190925261071d9085908590610b31565b50905061064b81610aef565b600080546001600160a01b031633146107545760405162461bcd60e51b81526004016104a69061166f565b6000610761858585610c07565b905061076c81610aef565b9150505b9392505050565b604080516060810182526000808252602082018190529181018290526000806101676001600160a01b031663d614cdb860e01b866040516024016107bb91906110a7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107f9919061145a565b6000604051808303816000865af19150503d8060008114610836576040519150601f19603f3d011682016040523d82523d6000602084013e61083b565b606091505b5091509150610863604080516060810182526000808252602082018190529181019190915290565b8261087057601581610884565b8180602001905181019061088491906116cb565b60039190910b97909650945050505050565b600080546001600160a01b031633146108c15760405162461bcd60e51b81526004016104a69061166f565b600061076185308686610ce8565b600080546001600160a01b031633146108fa5760405162461bcd60e51b81526004016104a69061166f565b600061090886868686610ce8565b905061091381610aef565b9695505050505050565b6000806000806101676001600160a01b031663f2c31ff460e01b878760405160240161094a9291906116b1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610988919061145a565b6000604051808303816000865af19150503d80600081146109c5576040519150601f19603f3d011682016040523d82523d6000602084013e6109ca565b606091505b5091509150816109dd5760156000610884565b808060200190518101906108849190611736565b60008060606000806101676001600160a01b031663278e0b8860e01b898989604051602401610a2293929190611762565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610a60919061145a565b6000604051808303816000865af19150503d8060008114610a9d576040519150601f19603f3d011682016040523d82523d6000602084013e610aa2565b606091505b509150915081610ac5576040805160008082526020820190925260159190610ad9565b80806020019051810190610ad991906117ec565b60039290920b9a90995090975095505050505050565b600060168214610b295760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064016104a6565b506001919050565b6000806000806101676001600160a01b031663acb9cff960e01b888888604051602401610b60939291906118af565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610b9e919061145a565b6000604051808303816000865af19150503d8060008114610bdb576040519150601f19603f3d011682016040523d82523d6000602084013e610be0565b606091505b509150915081610bf3576015600061043e565b8080602001905181019061043e919061191a565b604080516001600160a01b0385811660248301528416604482015263ffffffff831660648083019190915282518083039091018152608490910182526020810180516001600160e01b0316639790686d60e01b17905290516000918291829161016791610c74919061145a565b6000604051808303816000865af19150503d8060008114610cb1576040519150601f19603f3d011682016040523d82523d6000602084013e610cb6565b606091505b509150915081610cc7576015610cdb565b80806020019051810190610cdb9190611488565b60030b9695505050505050565b604080516001600160a01b038681166024830152858116604483015284166064820152600783900b6084808301919091528251808303909101815260a490910182526020810180516001600160e01b031663eca3691760e01b17905290516000918291829161016791610d5b919061145a565b6000604051808303816000865af19150503d8060008114610d98576040519150601f19603f3d011682016040523d82523d6000602084013e610d9d565b606091505b509150915081610dae576015610dc2565b80806020019051810190610dc29190611488565b60030b979650505050505050565b6040518060a0016040528060001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b031681525090565b6001600160a01b0381168114610e2857600080fd5b50565b8035610e3681610e13565b919050565b600060208284031215610e4d57600080fd5b813561077081610e13565b60008060408385031215610e6b57600080fd5b8235610e7681610e13565b946020939093013593505050565b60005b83811015610e9f578181015183820152602001610e87565b83811115610eae576000848401525b50505050565b60008151808452610ecc816020860160208601610e84565b601f01601f19169290920160200192915050565b8051151582526000602082015160018060a01b0380821660208601526040840151915060a06040860152610f1760a0860183610eb4565b915060608401518583036060870152610f308382610eb4565b925050806080850151166080860152508091505092915050565b8260070b815260406020820152600061064b6040830184610ee0565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610f9e57610f9e610f66565b60405290565b604080519081016001600160401b0381118282101715610f9e57610f9e610f66565b60405160a081016001600160401b0381118282101715610f9e57610f9e610f66565b604051601f8201601f191681016001600160401b038111828210171561101057611010610f66565b604052919050565b63ffffffff81168114610e2857600080fd5b600080828403608081121561103e57600080fd5b833561104981610e13565b92506060601f198201121561105d57600080fd5b50611066610f7c565b602084013561107481611018565b8152604084013561108481610e13565b6020820152606084013561109781611018565b6040820152919491935090915050565b6001600160a01b0391909116815260200190565b60006001600160401b038211156110d4576110d4610f66565b5060051b60200190565b8015158114610e2857600080fd5b60006001600160401b0382111561110557611105610f66565b50601f01601f191660200190565b600082601f83011261112457600080fd5b8135611137611132826110ec565b610fe8565b81815284602083860101111561114c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561117c57600080fd5b6111868335610e13565b8235915060208301356001600160401b03808211156111a457600080fd5b818501915085601f8301126111b857600080fd5b6111c561113283356110bb565b82358082526020808301929160051b850101888111156111e457600080fd5b602085015b818110156112f65784813511156111ff57600080fd5b80358601601f196040828d038201121561121857600080fd5b611220610fa4565b6020830135815260408301358881111561123957600080fd5b929092019160a0838e038301121561125057600080fd5b611258610fc6565b91506020830135611268816110de565b8252604083013561127881610e13565b602083015260608301358881111561128f57600080fd5b61129e8e602083870101611113565b6040840152506080830135888111156112b657600080fd5b6112c58e602083870101611113565b6060840152506112d760a08401610e2b565b60808301526020818101929092528652948501949190910190506111e9565b50959890975095505050505050565b6000806040838503121561131857600080fd5b823561132381610e13565b9150602083013561133381610e13565b809150509250929050565b60008060006060848603121561135357600080fd5b833561135e81610e13565b9250602084013561136e81610e13565b9150604084013561137e81611018565b809150509250925092565b805163ffffffff90811683526020808301516001600160a01b03169084015260409182015116910152565b828152608081016107706020830184611389565b6000806000606084860312156113dd57600080fd5b83356113e881610e13565b925060208401356113f881610e13565b929592945050506040919091013590565b6000806000806080858703121561141f57600080fd5b843561142a81610e13565b9350602085013561143a81610e13565b9250604085013561144a81610e13565b9396929550929360600135925050565b6000825161146c818460208701610e84565b9190910192915050565b8051600381900b8114610e3657600080fd5b60006020828403121561149a57600080fd5b61077082611476565b8051610e3681610e13565b600082601f8301126114bf57600080fd5b81516114cd611132826110ec565b8181528460208386010111156114e257600080fd5b61064b826020830160208701610e84565b6000806040838503121561150657600080fd5b61150f83611476565b915060208301516001600160401b038082111561152b57600080fd5b9084019060a0828703121561153f57600080fd5b611547610fc6565b8251611552816110de565b8152602083015161156281610e13565b602082015260408301518281111561157957600080fd5b611585888286016114ae565b60408301525060608301518281111561159d57600080fd5b6115a9888286016114ae565b6060830152506115bb608084016114a3565b60808201528093505050509250929050565b6001600160a01b0383168152608081016107706020830184611389565b6001600160a01b0383168152604060208083018290528351828401819052600092916060600583901b860181019290860190878301865b8281101561166057888603605f1901845281518051875285015185870188905261164d88880182610ee0565b9650509284019290840190600101611621565b50939998505050505050505050565b60208082526022908201527f43616c6c6572206973206e6f7420486564657261455243323020636f6e74726160408201526118dd60f21b606082015260800190565b6001600160a01b0392831681529116602082015260400190565b60008082840360808112156116df57600080fd5b6116e884611476565b92506060601f19820112156116fc57600080fd5b50611705610f7c565b602084015161171381611018565b8152604084015161172381610e13565b6020820152606084015161109781611018565b6000806040838503121561174957600080fd5b61175283611476565b91506020830151611333816110de565b60006060820160018060a01b038616835260206001600160401b038616818501526060604085015281855180845260808601915060808160051b870101935082870160005b8281101561166057607f198887030184526117c3868351610eb4565b955092840192908401906001016117a7565b80516001600160401b0381168114610e3657600080fd5b60008060006060848603121561180157600080fd5b61180a84611476565b925060206118198186016117d5565b925060408501516001600160401b0381111561183457600080fd5b8501601f8101871361184557600080fd5b8051611853611132826110bb565b81815260059190911b8201830190838101908983111561187257600080fd5b928401925b828410156118a05783518060070b81146118915760008081fd5b82529284019290840190611877565b80955050505050509250925092565b6001600160a01b03841681526001600160401b0383166020808301919091526060604083018190528351908301819052600091848101916080850190845b8181101561190c57845160070b835293830193918301916001016118ed565b509098975050505050505050565b6000806040838503121561192d57600080fd5b61193683611476565b9150611944602084016117d5565b9050925092905056fea2646970667358221220a46d1f9ed5dd7fdddc1e331f04b31b251d83bcf2675fe55b3a896fb98e41d88064736f6c634300080a0033";

type HTSTokenOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HTSTokenOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HTSTokenOwner__factory extends ContractFactory {
  constructor(...args: HTSTokenOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HTSTokenOwner> {
    return super.deploy(overrides || {}) as Promise<HTSTokenOwner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HTSTokenOwner {
    return super.attach(address) as HTSTokenOwner;
  }
  override connect(signer: Signer): HTSTokenOwner__factory {
    return super.connect(signer) as HTSTokenOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HTSTokenOwnerInterface {
    return new utils.Interface(_abi) as HTSTokenOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HTSTokenOwner {
    return new Contract(address, _abi, signerOrProvider) as HTSTokenOwner;
  }
}
