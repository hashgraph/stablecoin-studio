/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface IRescatableInterface extends utils.Interface {
  functions: {
    "rescueHbar(uint256)": FunctionFragment;
    "rescueToken(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "rescueHbar" | "rescueToken"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "rescueHbar",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "rescueToken",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(functionFragment: "rescueHbar", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rescueToken",
    data: BytesLike
  ): Result;

  events: {
    "HbarRescued(address,uint256,uint256)": EventFragment;
    "TokenRescued(address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "HbarRescued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenRescued"): EventFragment;
}

export interface HbarRescuedEventObject {
  rescuer: string;
  amount: BigNumber;
  oldAmount: BigNumber;
}
export type HbarRescuedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  HbarRescuedEventObject
>;

export type HbarRescuedEventFilter = TypedEventFilter<HbarRescuedEvent>;

export interface TokenRescuedEventObject {
  rescuer: string;
  tokenId: string;
  amount: BigNumber;
  oldBalance: BigNumber;
}
export type TokenRescuedEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  TokenRescuedEventObject
>;

export type TokenRescuedEventFilter = TypedEventFilter<TokenRescuedEvent>;

export interface IRescatable extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IRescatableInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    rescueHbar(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    rescueToken(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  rescueHbar(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  rescueToken(
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    rescueHbar(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    rescueToken(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "HbarRescued(address,uint256,uint256)"(
      rescuer?: null,
      amount?: null,
      oldAmount?: null
    ): HbarRescuedEventFilter;
    HbarRescued(
      rescuer?: null,
      amount?: null,
      oldAmount?: null
    ): HbarRescuedEventFilter;

    "TokenRescued(address,address,uint256,uint256)"(
      rescuer?: null,
      tokenId?: null,
      amount?: null,
      oldBalance?: null
    ): TokenRescuedEventFilter;
    TokenRescued(
      rescuer?: null,
      tokenId?: null,
      amount?: null,
      oldBalance?: null
    ): TokenRescuedEventFilter;
  };

  estimateGas: {
    rescueHbar(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    rescueToken(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    rescueHbar(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    rescueToken(
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
