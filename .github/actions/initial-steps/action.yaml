name: Initial_Steps
description: Common initial steps for all workflows, with optional dependency installation.

inputs:
  module: # Options: "contracts", "sdk", "web", "cli", "backend"
    description: "The module to install dependencies for"
    required: false
  docker-engine-ubuntu: # Options: "true", "false"
    description: "Whether to install Docker and Docker Compose from Docker repository"
    required: false
    default: "false"
  deps-create-env-file: # Options: "true", "false"
    description: "Whether to install dependencies for creating the .env file"
    required: false
    default: "false"
  deps-change-references: # Options: "true", "false"
    description: "Whether to install dependencies for changing references to the repo. execution of 'changeProyectsReferencesToRepo.sh'"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Install glibc in Alpine to add multi-arch support
      shell: sh
      if: ${{ inputs.module != 'contracts' }}
      run: apk add --no-cache gcompat libc6-compat

    - name: Install docker on ubuntu based images
      shell: bash
      if: ${{ inputs.docker-engine-ubuntu  == 'true' }}
      run: |
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

        # Install Docker and Docker Compose from Docker repository
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Install dependencies to create ENV file
      shell: sh
      if: ${{ inputs.deps-create-env-file == 'true' }}
      run: apk add --no-cache curl jq

    - name: Install dependencies to change references to the repo
      shell: sh
      if: ${{ inputs.deps-change-references == 'true' }}
      run: apk add --no-cache bash sed
