name: PR Tests

on:
  pull_request:
    branches: [main]

jobs:
  test-node:
    name: Testing Modified Directories
    runs-on: [self-hosted, Linux, medium, ephemeral]
    env:
      NODE_OPTIONS: "--max-old-space-size=32768"
    permissions:
      contents: read

    strategy:
      matrix:
        directory:
          - hashconnect/lib
          - backend
          - contracts
          - sdk
          - cli
          - web

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6

      - name: Build the Docker image
        run: docker build -t rpc .
        working-directory: dockerfile

      - name: Setup NodeJS Environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x

      - name: Cache npm dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Determine if directory has changed
        id: changes
        run: |
          echo "## Determining changes in the ${{ matrix.directory }} directory"
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${{ matrix.directory }}/"; then
            echo "run_tests=true" >> $GITHUB_ENV
          else
            echo "run_tests=false" >> $GITHUB_ENV
          fi

      - name: Install dependencies and build
        if: env.run_tests == 'true'
        run: |
          npm ci
          npm run build
        working-directory: ${{ matrix.directory }}

      - name: Create file for SDK
        if: env.run_tests == 'true' && matrix.directory == 'sdk'
        run: |
          touch .env
          API_RESPONSE_1=$(curl -s -H "Authorization: Bearer ${{ secrets.API_ACCESS_TOKEN_1 }}" -H "User-Agent: AppName/1.2.3" https://portal.hedera.com/api/account)
          API_RESPONSE_2=$(curl -s -H "Authorization: Bearer ${{ secrets.API_ACCESS_TOKEN_2 }}" -H "User-Agent: AppName/1.2.3" https://portal.hedera.com/api/account)
          echo "CLIENT_PRIVATE_KEY_ECDSA=$(echo $API_RESPONSE_1 | jq -r '.accounts[1].privateKey')" >> .env
          echo "CLIENT_PUBLIC_KEY_ECDSA=$(echo $API_RESPONSE_1 | jq -r '.accounts[1].publicKey')" >> .env
          echo "CLIENT_ACCOUNT_ID_ECDSA=0.0.$(echo $API_RESPONSE_1 | jq -r '.accounts[1].accountNum')" >> .env
          echo "CLIENT_EVM_ADDRESS_ECDSA=$(curl -s https://testnet.mirrornode.hedera.com/api/v1/accounts/$CLIENT_ACCOUNT_ID_ECDSA)" >> .env
          echo "CLIENT_PRIVATE_KEY_ED25519=$(echo $API_RESPONSE_1 | jq -r '.accounts[0].privateKey')" >> .env
          echo "CLIENT_PUBLIC_KEY_ED25519=$(echo $API_RESPONSE_1 | jq -r '.accounts[0].publicKey')" >> .env
          echo "CLIENT_ACCOUNT_ID_ED25519=0.0.$(echo $API_RESPONSE_1 | jq -r '.accounts[0].accountNum')" >> .env
          echo "CLIENT_EVM_ADDRESS_ED25519=$(curl -s https://testnet.mirrornode.hedera.com/api/v1/accounts/$CLIENT_ACCOUNT_ID_ED25519)" >> .env
          echo "CLIENT_PRIVATE_KEY_ECDSA_2=$(echo $API_RESPONSE_2 | jq -r '.accounts[1].privateKey')" >> .env
          echo "CLIENT_PUBLIC_KEY_ECDSA_2=$(echo $API_RESPONSE_2 | jq -r '.accounts[1].publicKey')" >> .env
          echo "CLIENT_ACCOUNT_ID_ECDSA_2=0.0.$(echo $API_RESPONSE_2 | jq -r '.accounts[1].accountNum')" >> .env
          echo "CLIENT_EVM_ADDRESS_ECDSA_2=$(curl -s https://testnet.mirrornode.hedera.com/api/v1/accounts/$CLIENT_ACCOUNT_ID_ECDSA_2)" >> .env
          echo "CLIENT_PRIVATE_KEY_ED25519_2=$(echo $API_RESPONSE_2 | jq -r '.accounts[0].privateKey')" >> .env
          echo "CLIENT_PUBLIC_KEY_ED25519_2=$(echo $API_RESPONSE_2 | jq -r '.accounts[0].publicKey')" >> .env
          echo "CLIENT_ACCOUNT_ID_ED25519_2=0.0.$(echo $API_RESPONSE_2 | jq -r '.accounts[0].accountNum')" >> .env
          echo "CLIENT_EVM_ADDRESS_ED25519_2=$(curl -s https://testnet.mirrornode.hedera.com/api/v1/accounts/$CLIENT_ACCOUNT_ID_ED25519_2)" >> .env
          echo "HEDERA_TOKEN_MANAGER_ADDRESS=0.0.2167020"  >> .env
          echo "FACTORY_ADDRESS=0.0.2167166"  >> .env
        working-directory: sdk

      - name: Create contracts env file
        if: env.run_tests == 'true' && matrix.directory == 'contracts'
        run: |
          touch .env
          API_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.API_ACCESS_TOKEN_1 }}" -H "User-Agent: AppName/1.2.3" https://portal.hedera.com/api/account)
          echo "TESTNET_HEDERA_OPERATOR_PRIVATEKEY=$(echo $API_RESPONSE | jq -r '.accounts[0].privateKey')" >> .env
          echo "TESTNET_HEDERA_OPERATOR_PUBLICKEY=$(echo $API_RESPONSE | jq -r '.accounts[0].publicKey')" >> .env
          echo "TESTNET_HEDERA_OPERATOR_ED25519='true'" >> .env
          echo "TESTNET_HEDERA_OPERATOR_ACCOUNT=0.0.$(echo $API_RESPONSE | jq -r '.accounts[0].accountNum')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_PRIVATEKEY=$(echo $API_RESPONSE | jq -r '.accounts[1].privateKey')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_PUBLICKEY=$(echo $API_RESPONSE | jq -r '.accounts[1].publicKey')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_ED25519='false'" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_ACCOUNT=0.0.$(echo $API_RESPONSE | jq -r '.accounts[1].accountNum')" >> .env
        working-directory: contracts

      - name: Run tests
        if: env.run_tests == 'true'
        run: |
          npm run test
          npm run cleanCache
        working-directory: ${{ matrix.directory }}
