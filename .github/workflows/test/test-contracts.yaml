name: Test_Contracts

on:
  pull_request:
    paths:
      - "contracts/**"
  push:
    branches: [main]
    paths:
      - "contracts/**"
# env:
# NODE_VERSION: "20.17.0" # Fixed version for better stability

jobs:
  test-contracts:
    runs-on: token-studio-linux-medium
    container:
      image: node:20.17.0-alpine3.20 # Using alpine for a smaller image
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Install glibc in Alpine to add multi-arch support
        run: apk add --no-cache gcompat libc6-compat

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Install dependencies
        run: apk add --no-cache python3 py3-pip make g++ curl jq

      - name: Create .env file
        run: |
          touch .env
          # Making API call to fetch secrets
          API_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.API_ACCESS_TOKEN_1 }}" -H "User-Agent: AppName/1.2.3" https://portal.hedera.com/api/account)
          # Assuming the API response is JSON and contains secrets like CLIENT_PRIVATE_KEY
          echo "TESTNET_HEDERA_OPERATOR_PRIVATEKEY=$(echo $API_RESPONSE | jq -r '.accounts[0].privateKey')" >> .env
          echo "TESTNET_HEDERA_OPERATOR_PUBLICKEY=$(echo $API_RESPONSE | jq -r '.accounts[0].publicKey')" >> .env
          echo "TESTNET_HEDERA_OPERATOR_ED25519='true'" >> .env
          echo "TESTNET_HEDERA_OPERATOR_ACCOUNT=0.0.$(echo $API_RESPONSE | jq -r '.accounts[0].accountNum')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_PRIVATEKEY=$(echo $API_RESPONSE | jq -r '.accounts[1].privateKey')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_PUBLICKEY=$(echo $API_RESPONSE | jq -r '.accounts[1].publicKey')" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_ED25519='false'" >> .env
          echo "TESTNET_HEDERA_NON_OPERATOR_ACCOUNT=0.0.$(echo $API_RESPONSE | jq -r '.accounts[1].accountNum')" >> .env
        working-directory: contracts

      - name: Install Contracts
        run: npm ci
        working-directory: contracts

      - name: Build Contracts
        run: npm run compile:force
        working-directory: contracts

      # * Actual test command
      # - name: Run
      #   run: npm run test:ci
      #   working-directory: contracts

      - name: Clean project
        run: npm run clean
        working-directory: contracts
