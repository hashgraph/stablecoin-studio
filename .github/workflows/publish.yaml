name: Publish

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Run npm publish with dry-run flag"
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  contracts:
    runs-on: token-studio-linux-medium
    container:
      image: node:20.17.0-alpine3.20 # Using alpine for a smaller image
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 #v2.8.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Setup NPM
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Install bash
        run: apk add --no-cache bash

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          @hashgraph:registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF
        working-directory: contracts
        shell: bash

      - name: Change references to repo
        run:  |
          ls -alF ${GITHUB_WORKSPACE}
          chmod +x ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
        shell: bash

      - name: Install Contracts
        run: npm ci
        working-directory: contracts
        shell: bash

      - name: Publish contracts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run }}
        run: |
          if [[ "$DRY_RUN" == "true" ]]; then
            npm run publish:contracts --access=public --dry-run
          else
            npm run publish:contracts --access=public
          fi
        shell: bash

  sdk:
    # needs: contracts
    runs-on: token-studio-linux-medium
    container:
      image: node:20.17.0-alpine3.20 # Using alpine for a smaller image
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 #v2.8.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Install bash
        run: apk add --no-cache bash

      - name: Setup NPM
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          @hashgraph:registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF
        working-directory: sdk
        shell: bash

      - name: Change references to repo
        run:  |
          ls -alF ${GITHUB_WORKSPACE}
          chmod +x ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
        shell: bash

      # * Prepare other modules
      - name: Install and build Contracts and SDK
        uses: ./.github/actions/install-and-build
        with:
          module: "sdk"

      - name: Publish sdk package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run }}
        run: |
          if [[ "$DRY_RUN" == "true" ]]; then
            npm run publish:sdk --access=public --dry-run
          else
            npm run publish:sdk --access=public
          fi
        working-directory: sdk
        shell: bash

  cli:
    # needs: sdk
    runs-on: token-studio-linux-medium
    container:
      image: node:20.17.0-alpine3.20 # Using alpine for a smaller image
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 #v2.8.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Install bash
        run: apk add --no-cache bash

      - name: Setup NPM
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          @hashgraph:registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF
        working-directory: cli
        shell: bash

      - name: Change references to repo
        run: |
          ls -alF ${GITHUB_WORKSPACE}
          chmod +x ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh
        shell: bash

      # * Prepare other modules
      - name: Install and build Contracts and SDK
        uses: ./.github/actions/install-and-build
        with:
          module: "cli"

      - name: Publish cli package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run }}
        run: |
          if [[ "$DRY_RUN" == "true" ]]; then
            npm run publish:cli --access=public --dry-run
          else
            npm run publish:cli --access=public
          fi
        working-directory: cli
        shell: bash
