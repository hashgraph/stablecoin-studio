name: Publish

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      dry-run-enabled:
        description: "Run npm publish with dry-run flag"
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  contracts:
    runs-on: token-studio-linux-medium
    container:
      image: node@sha256:db5dd2f30cb82a8bdbd16acd4a8f3f2789f5b24f6ce43f98aa041be848c82e45 # node:20.17.0-bookworm
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 #v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Setup NPM
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF

      - name: Change references to repo
        run:  |
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh

      - name: Install Contracts
        run: npm ci
        working-directory: contracts

      # * Build contracts
      - name: Build Contracts
        uses: ./.github/actions/install-and-build
        with:
          module: "contracts"

      - name: Publish contracts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run-enabled }}
        run: |
          echo "DRY_RUN is set to: '${DRY_RUN}'"
          
          ARGS=("--access=public")
          if [[ "${DRY_RUN}" == "true" ]]; then
            ARGS+=("--dry-run")
          fi

          npm run publish:contracts -- "${ARGS[@]}"

  sdk:
    # needs: contracts
    runs-on: token-studio-linux-medium
    container:
      image: node@sha256:db5dd2f30cb82a8bdbd16acd4a8f3f2789f5b24f6ce43f98aa041be848c82e45 # node:20.17.0-bookworm
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 #v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Setup NPM
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF

      - name: Change references to repo
        run:  |
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh

      # * Prepare other modules
      - name: Install and build Contracts and SDK
        uses: ./.github/actions/install-and-build
        with:
          module: "sdk"

      - name: Publish sdk package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run-enabled }}
        run: |
          echo "DRY_RUN is set to: '${DRY_RUN}'"
          
          ARGS=("--access=public")
          if [[ "${DRY_RUN}" == "true" ]]; then
            ARGS+=("--dry-run")
          fi

          npm run publish:sdk -- "${ARGS[@]}"

  cli:
    # needs: sdk
    runs-on: token-studio-linux-medium
    container:
      image: node@sha256:db5dd2f30cb82a8bdbd16acd4a8f3f2789f5b24f6ce43f98aa041be848c82e45 # node:20.17.0-bookworm
    permissions:
      contents: read

    steps:
      # * Initial steps
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 #v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: '0'

      - name: Setup NPM
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Create file .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cat << 'EOF' > .npmrc
          //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          EOF

      - name: Change references to repo
        run: |
          ${GITHUB_WORKSPACE}/changeProjectsReferencesToRepo.sh

      # * Prepare other modules
      - name: Install and build Contracts and SDK
        uses: ./.github/actions/install-and-build
        with:
          module: "cli"

      - name: Publish cli package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ inputs.dry-run-enabled }}
        run: |
          echo "DRY_RUN is set to: '${DRY_RUN}'"
          
          ARGS=("--access=public")
          if [[ "${DRY_RUN}" == "true" ]]; then
            ARGS+=("--dry-run")
          fi

          npm run publish:cli -- "${ARGS[@]}"
